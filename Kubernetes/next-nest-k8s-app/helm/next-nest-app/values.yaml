global:
  environment: development
  domain: localhost

postgresql:
  enabled: true
  auth:
    postgresPassword: postgres_password
    username: nestjs_user
    password: nestjs_password
    database: nestjs_app
  persistence:
    enabled: true
    size: 1Gi
  service:
    port: 5432

backend:
  enabled: true
  replicaCount: 2
  image:
    repository: next-nest-k8s-app-backend
    tag: latest
    pullPolicy: Never

  service:
    type: ClusterIP
    port: 3001
    targetPort: 3001

  env:
    NODE_ENV: production
    PORT: "3001"

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

  healthCheck:
    liveness:
      path: /users
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    readiness:
      path: /users
      initialDelaySeconds: 5
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 3

frontend:
  enabled: true
  replicaCount: 2
  image:
    repository: next-nest-k8s-app-frontend
    tag: latest
    pullPolicy: Never

  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000

  env:
    NODE_ENV: production
    NEXT_PUBLIC_API_URL: "/api"

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: localhost
      paths:
        - path: /api
          pathType: Prefix
          service: backend
          rewrite: true
        - path: /
          pathType: Prefix
          service: frontend
          rewrite: false
  tls: []

serviceAccount:
  create: true
  annotations: {}
  name: ""

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
    - Egress
