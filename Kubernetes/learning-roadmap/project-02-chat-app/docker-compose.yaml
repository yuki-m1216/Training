services:
  redis:
    image: redis:7-alpine
    container_name: chat-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: chat-backend
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - USE_REDIS=true
      - FRONTEND_URL=http://localhost:3001
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/package-lock.json:/app/package-lock.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/nest-cli.json:/app/nest-cli.json
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - chat-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: chat-frontend
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=development
      - PORT=3001
      - NEXT_PUBLIC_SOCKET_URL=http://localhost:3000
    volumes:
      - ./frontend/app:/app/app
      - ./frontend/public:/app/public
      - ./frontend/hooks:/app/hooks
      - ./frontend/types:/app/types
      - ./frontend/package.json:/app/package.json
      - ./frontend/package-lock.json:/app/package-lock.json
      - ./frontend/next.config.ts:/app/next.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tailwind.config.ts:/app/tailwind.config.ts
      - ./frontend/postcss.config.mjs:/app/postcss.config.mjs
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - chat-network
    restart: unless-stopped

networks:
    chat-network:
      driver: bridge

volumes:
  redis-data:
    driver: local
